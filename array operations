#include <stdio.h>

#define SIZE 100

void createArray(int arr[], int *n) {
    int i;
    printf("Enter number of elements: ");
    scanf("%d", n);
    printf("Enter %d elements:\n", *n);
    for (i = 0; i < *n; i++) {
        scanf("%d", &arr[i]);
    }
}

void insertElement(int arr[], int *n, int pos, int val) {
    if (pos < 0 || pos > *n) {
        printf("Invalid position!\n");
        return;
    }
    for (int i = *n; i > pos; i--) {
        arr[i] = arr[i - 1];
    }
    arr[pos] = val;
    (*n)++;
    printf("Element inserted.\n");
}

void deleteElement(int arr[], int *n, int pos) {
    if (pos < 0 || pos >= *n) {
        printf("Invalid position!\n");
        return;
    }
    for (int i = pos; i < *n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*n)--;
    printf("Element deleted.\n");
}

void linearSearch(int arr[], int n, int key) {
    for (int i = 0; i < n; i++) {
        if (arr[i] == key) {
            printf("Element found at index %d\n", i);
            return;
        }
    }
    printf("Element not found.\n");
}

void binarySearch(int arr[], int n, int key) {
    int low = 0, high = n - 1, mid;
    while (low <= high) {
        mid = (low + high) / 2;
        if (arr[mid] == key) {
            printf("Element found at index %d\n", mid);
            return;
        } else if (arr[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    printf("Element not found.\n");
}

void displayArray(int arr[], int n) {
    printf("Array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[SIZE], n = 0, choice, pos, val, key;

    while (1) {
        printf("\n--- Menu ---\n");
        printf("1. Create Array\n2. Insert Element\n3. Delete Element\n4. Linear Search\n5. Binary Search\n6. Display\n7. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                createArray(arr, &n);
                break;
            case 2:
                printf("Enter position and value to insert: ");
                scanf("%d %d", &pos, &val);
                insertElement(arr, &n, pos, val);
                break;
            case 3:
                printf("Enter position to delete: ");
                scanf("%d", &pos);
                deleteElement(arr, &n, pos);
                break;
            case 4:
                printf("Enter element to search (Linear): ");
                scanf("%d", &key);
                linearSearch(arr, n, key);
                break;
            case 5:
                printf("Enter element to search (Binary - array must be sorted): ");
                scanf("%d", &key);
                binarySearch(arr, n, key);
                break;
            case 6:
                displayArray(arr, n);
                break;
            case 7:
                return 0;
            default:
                printf("Invalid choice!\n");
        }
    }
}
